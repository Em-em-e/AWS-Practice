<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="warehouse.dao.OutWarehouseMapper" >
  <resultMap id="BaseResultMap" type="warehouse.model.OutWarehouse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="out_date" property="outDate" jdbcType="TIMESTAMP" />
    <result column="out_no" property="outNo" jdbcType="VARCHAR" />
    <result column="customer_no" property="customerNo" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="purchase_no" property="purchaseNo" jdbcType="VARCHAR" />
    <result column="length" property="length" jdbcType="DOUBLE" />
    <result column="width" property="width" jdbcType="DOUBLE" />
    <result column="height" property="height" jdbcType="DOUBLE" />
    <result column="cube" property="cube" jdbcType="DOUBLE" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="sales_price" property="salesPrice" jdbcType="DOUBLE" />
    <result column="sales_amount" property="salesAmount" jdbcType="DOUBLE" />
    <result column="sales_transport" property="salesTransport" jdbcType="DOUBLE" />
    <result column="purchase_price" property="purchasePrice" jdbcType="DOUBLE" />
    <result column="purchase_amount" property="purchaseAmount" jdbcType="DOUBLE" />
    <result column="profit" property="profit" jdbcType="DOUBLE" />
    <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, out_date, out_no, customer_no, customer_name, purchase_no, length, width, height, 
    cube, product_no, product_name, quantity, sales_price, sales_amount, sales_transport, 
    purchase_price, purchase_amount, profit, op_time, remark
  </sql>
  <select id="queryPage" resultMap="BaseResultMap">  
        select * from out_warehouse   
        <where>  
        	1=1
            <if test="outWarehouse.id != null">  
                and id=#{outWarehouse.id}
            </if> 
            <if test="outWarehouse.outNo != null">  
                and out_no LIKE CONCAT('%', CONCAT(#{outWarehouse.outNo}, '%'))
            </if>
            <if test="outWarehouse.outDate != null">
            	and DATE_FORMAT(out_date,"%Y-%m-%d")=DATE_FORMAT(#{outWarehouse.outDate},"%Y-%m-%d")
            </if>  
            <if test="outWarehouse.productName != null">
            	and product_name LIKE CONCAT('%', CONCAT(#{outWarehouse.productName}, '%'))
            </if> 
        </where>
        order by op_time desc
        <if test="limit != null">
	        limit #{offset},#{limit} 
        </if>  
    </select> 
  <select id="count" resultType="java.lang.Integer">
    	select count(*) from out_warehouse
    	<where>  
        	1=1
            <if test="outWarehouse.id != null">  
                and id=#{outWarehouse.id}
            </if> 
            <if test="outWarehouse.outNo != null">  
                and out_no LIKE CONCAT('%', CONCAT(#{outWarehouse.outNo}, '%'))
            </if> 
            <if test="outWarehouse.outDate !=null">
            	and DATE_FORMAT(out_date,"%Y-%m-%d")=DATE_FORMAT(#{outWarehouse.outDate},"%Y-%m-%d")
            </if> 
            <if test="outWarehouse.productName != null">
            	and product_name LIKE CONCAT('%', CONCAT(#{outWarehouse.productName}, '%'))
            </if>
        </where>
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from out_warehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from out_warehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="warehouse.model.OutWarehouse" >
    insert into out_warehouse (id, out_date, out_no, 
      customer_no, customer_name, purchase_no, 
      length, width, height, 
      cube, product_no, product_name, 
      quantity, sales_price, sales_amount, 
      sales_transport, purchase_price, purchase_amount, 
      profit, op_time, remark
      )
    values (#{id,jdbcType=INTEGER}, #{outDate,jdbcType=TIMESTAMP}, #{outNo,jdbcType=VARCHAR}, 
      #{customerNo,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{purchaseNo,jdbcType=VARCHAR}, 
      #{length,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, #{height,jdbcType=DOUBLE}, 
      #{cube,jdbcType=DOUBLE}, #{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{salesPrice,jdbcType=DOUBLE}, #{salesAmount,jdbcType=DOUBLE}, 
      #{salesTransport,jdbcType=DOUBLE}, #{purchasePrice,jdbcType=DOUBLE}, #{purchaseAmount,jdbcType=DOUBLE}, 
      #{profit,jdbcType=DOUBLE}, #{opTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="warehouse.model.OutWarehouse" >
    insert into out_warehouse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outDate != null" >
        out_date,
      </if>
      <if test="outNo != null" >
        out_no,
      </if>
      <if test="customerNo != null" >
        customer_no,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="purchaseNo != null" >
        purchase_no,
      </if>
      <if test="length != null" >
        length,
      </if>
      <if test="width != null" >
        width,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="cube != null" >
        cube,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="salesPrice != null" >
        sales_price,
      </if>
      <if test="salesAmount != null" >
        sales_amount,
      </if>
      <if test="salesTransport != null" >
        sales_transport,
      </if>
      <if test="purchasePrice != null" >
        purchase_price,
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount,
      </if>
      <if test="profit != null" >
        profit,
      </if>
      <if test="opTime != null" >
        op_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outDate != null" >
        #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outNo != null" >
        #{outNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null" >
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseNo != null" >
        #{purchaseNo,jdbcType=VARCHAR},
      </if>
      <if test="length != null" >
        #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null" >
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="cube != null" >
        #{cube,jdbcType=DOUBLE},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="salesPrice != null" >
        #{salesPrice,jdbcType=DOUBLE},
      </if>
      <if test="salesAmount != null" >
        #{salesAmount,jdbcType=DOUBLE},
      </if>
      <if test="salesTransport != null" >
        #{salesTransport,jdbcType=DOUBLE},
      </if>
      <if test="purchasePrice != null" >
        #{purchasePrice,jdbcType=DOUBLE},
      </if>
      <if test="purchaseAmount != null" >
        #{purchaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="profit != null" >
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="opTime != null" >
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="warehouse.model.OutWarehouse" >
    update out_warehouse
    <set >
      <if test="outDate != null" >
        out_date = #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outNo != null" >
        out_no = #{outNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null" >
        customer_no = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseNo != null" >
        purchase_no = #{purchaseNo,jdbcType=VARCHAR},
      </if>
      <if test="length != null" >
        length = #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="cube != null" >
        cube = #{cube,jdbcType=DOUBLE},
      </if>
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="salesPrice != null" >
        sales_price = #{salesPrice,jdbcType=DOUBLE},
      </if>
      <if test="salesAmount != null" >
        sales_amount = #{salesAmount,jdbcType=DOUBLE},
      </if>
      <if test="salesTransport != null" >
        sales_transport = #{salesTransport,jdbcType=DOUBLE},
      </if>
      <if test="purchasePrice != null" >
        purchase_price = #{purchasePrice,jdbcType=DOUBLE},
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount = #{purchaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="profit != null" >
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="opTime != null" >
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="warehouse.model.OutWarehouse" >
    update out_warehouse
    set out_date = #{outDate,jdbcType=TIMESTAMP},
      out_no = #{outNo,jdbcType=VARCHAR},
      customer_no = #{customerNo,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      purchase_no = #{purchaseNo,jdbcType=VARCHAR},
      length = #{length,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      height = #{height,jdbcType=DOUBLE},
      cube = #{cube,jdbcType=DOUBLE},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      sales_price = #{salesPrice,jdbcType=DOUBLE},
      sales_amount = #{salesAmount,jdbcType=DOUBLE},
      sales_transport = #{salesTransport,jdbcType=DOUBLE},
      purchase_price = #{purchasePrice,jdbcType=DOUBLE},
      purchase_amount = #{purchaseAmount,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      op_time = #{opTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>