<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="warehouse.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="warehouse.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="remark1" property="remark1" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, name, usertype, last_login_time, remark1
  </sql>
  <select id="queryPage" resultMap="BaseResultMap">  
        select * from sys_user   
        <where>  
        	1=1
            <if test="sysUser.id != null">  
                and id=#{sysUser.id}
            </if> 
            <if test="sysUser.usertype != null">  
                and usertype like CONCAT('%', CONCAT(#{sysUser.usertype}, '%'))
            </if>
            <if test="sysUser.username != null">  
                and username like CONCAT('%', CONCAT(#{sysUser.username}, '%'))
            </if> 
            <if test="sysUser.name != null">  
                and name like CONCAT('%', CONCAT(#{sysUser.name}, '%'))
            </if>   
        </where>
        <if test="limit != null">
	        limit #{offset},#{limit} 
        </if>  
    </select> 
  <select id="count" resultType="java.lang.Integer">
    	select count(*) from sys_user
    	<where>  
        	1=1
            <if test="sysUser.id != null">  
                and id=#{sysUser.id}
            </if> 
            <if test="sysUser.usertype != null">  
                and usertype=#{sysUser.usertype}
            </if>
            <if test="sysUser.username != null">  
                and username like CONCAT('%', CONCAT(#{sysUser.username}, '%'))
            </if> 
            <if test="sysUser.name != null">  
                and name like CONCAT('%', CONCAT(#{sysUser.name}, '%'))
            </if>  
        </where>
    </select>
  
  <select id="superSelect" parameterType="String" resultType="java.util.LinkedHashMap"> 
		${value} 
	</select>
  <select id="getByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select * from sys_user where username=#{username}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="warehouse.model.SysUser" >
    insert into sys_user (id, username, password, 
      name, usertype, last_login_time, 
      remark1)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{remark1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="warehouse.model.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="remark1 != null" >
        remark1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="warehouse.model.SysUser" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark1 != null" >
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="warehouse.model.SysUser" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      remark1 = #{remark1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>